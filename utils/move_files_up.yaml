---

- name: Check User Folder
  hosts: downloader
  gather_facts: no
  vars:
    my_move_up_dir: "{{ move_up_dir }}"
    my_move_to_dir: "{{ move_to_dir }}"

  tasks:
    - name: Print Working Folder
      debug:
        msg: "Working folder: {{ my_move_up_dir }}"

    - name: Print Destination Folder
      debug:
        msg: "Destination folder: {{ my_move_to_dir }}"

    - name: Find files in folder "{{ my_move_up_dir }}"
      find:
        paths: "{{ my_move_up_dir }}"
        patterns: "*.*"
        recurse: yes
      register: files_matched
      become: yes

    - name: Print files found in "{{ my_move_up_dir }}"
      debug:
        msg: "{{ files_matched }}"

    # - name: Move file to parent folder
    #   command: 'mv "{{ item.path }}" "{{ item.path.split("/")[0:-2] | join("/") }}"'
    #   with_items: "{{ files_matched.files }}"
    #   register: cmd_out

    # - name: Print mv output
    #   debug:
    #     msg: "{{ cmd_out }}"

    - name: Remove empty folders
      shell: |
        find . -type l -print -not -path "*_UNPACK_*" | xargs -d '\n' rm -f
        find . -type d -print -not -path "*_UNPACK_*" | sort -r | xargs -d '\n' rmdir -p --ignore-fail-on-non-empty 2>/dev/null
        sudo find . -type d -empty -delete
      args:
        chdir: "{{ my_move_up_dir }}"
      register: cmd_out

    - name: Print cleandir output
      debug:
        msg: "{{ cmd_out }}"

    - name: Move files to dest. folder
      shell: |
        find . -mindepth 1 -maxdepth 1 -exec echo mv -t "{{ my_move_to_dir }}/" -- {} +
      args:
        chdir: "{{ my_move_up_dir }}"
      register: cmd_out
      become: yes

    - name: Print mv output
      debug:
        msg: "{{ cmd_out }}"
